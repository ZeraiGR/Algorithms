// Бинарный поиск

// Велосипедисты, участвующие в шоссейной гонке, в некоторый момент
// времени, который называется начальным, оказались в точках, 
// удалённых от места старта на х1, х2, ..., xn метров (n - общее кол-во
// велосипедистов, не превосходит 100 000). Каждый велосипедист
// двигается со своей постоянной скоростью v1, v2, ..., vn метров в секунду.
// Все велосипедисты двигаются в одну и ту же сторону.
// Репортёр, освещающий ход соревнований, хочет определить момент
// времени, в котором расстояние между лидирующим в гонке
// велосипедистом и замыкающим гонку велосипедистом станет
// минимальным, чтобы с вертолёта сфотографировать сразу всех
// участников велогонки.

// Необходимо найти момент времени, когда расстояние станет минимальным.

// Решение.
// Определим функцию dist(t), которая будет за O(N) определять
// расстояние между лидером и замыкающим в момент времени t.
// Если dist(t+e) > dist(t), то функция растёт и надо сдвинуть левую
// границу поиска, иначе - правую.

function dist (t, params) {
	const [x, v] = params;
	let minpos = x[0] + v[0] * t;
	let maxpos = x[0] + v[0] * t;
	for (let i = 1; i < x.length; i++) {
		let nowpos = x[i] + v[i] * t;
		minpos = Math.min(minpos, nowpos);
		maxpos = Math.max(maxpos, nowpos);
	}
	return maxpos - minpos;
}

function check (t, eps, params) {
	return dist(t + eps, params) >= dist(t, params);
}

function fbinSearch (l, r, eps, check, params) {
	while (l + eps < r) {
		let m = (l + r) / 2;
		if (check(m , eps, params)) {
			r = m
		} else {
			l = m;
		}
	}
	return l;
}
