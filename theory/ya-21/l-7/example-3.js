// Сортировка событий

// Сайт посетило N человек, для каждого известно время входа на сайт
// In(i) и время выхода с сайта Out(i). Считается, что человек был на сайте
// с момента In(i) по Out(i) включительно. Начальник заходил на сайт M раз
// в моменты времени Boss(i) и смотрел, сколько людей сейчас онлайн.
// Посещения сайта начальником упорядочены по возрастанию времени.

// Определите, какие показания счётчика люлей онлайн увидел начальник.

// Решение.
// Создадим третий тип события - "вход начальника" и при наступлении
// такого события будем сохранять текущее значение счётчика посетилелей.

// n - number - количество людей
// tin: number[] - массив со временем входа (индекс - номер посетителя)
// tout: number[] - массив со временем выхода (индекс - номер посетителя)
// m - сколько раз начальник заходил на сайт
// tboss: number[] - массив со временем захода начальника
function bossCounters (n, tin, tout, m, tboss) {
	let events = [];
	for (let i = 0; i < n; i++) {
		// -1 (маркер для события о том, что человек пришел на сайт)
		// 1 (маркер для события о том, что человек вышел с сайта)
		events.push([tin[i], -1]);
		events.push([tout[i], 1]);
	}
	for (let i = 0; i < m; i++) {
		// 0 (маркер для события о том, что босс зашёл на сайт)
		events.push([tboss[i], 0]);
	}
	events.sort();
	let online = 0;
	let bosssans = [];
	for (let i = 0; i < events.length; i++) {
		if (events[i][1] == -1) {
			online += 1;
		} else if (events[i][1] == 1) {
			online -= 1;
		} else {
			bosssans.push(online);
		}
	}
	return bosssans;
}