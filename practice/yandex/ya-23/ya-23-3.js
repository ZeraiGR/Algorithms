// Коллекционер Диего

// Диего увлекается коллекционированием наклеек. На каждой из них написано число, и каждый коллекционер мечтает собрать наклейки со всеми встречающимися числами.

// Диего собрал N наклеек, некоторые из которых, возможно, совпадают. Как-то раз к нему пришли K коллекционеров. i-й из них собрал все наклейки с номерами не меньшими, чем pi. Напишите программу, которая поможет каждому из коллекционеров определить, сколько недостающих ему наклеек есть у Диего. Разумеется, гостей Диего не интересуют повторные экземпляры наклеек.

// Формат ввода
// В первой строке содержится единственное число N (0 ≤ N ≤ 100 000) — количество наклеек у Диего.

// В следующей строке содержатся N целых неотрицательных чисел (не обязательно различных) — номера наклеек Диего. Все номера наклеек не превосходят 109.

// В следующей строке содержится число K (0 ≤ K ≤ 100 000) — количество коллекционеров, пришедших к Диего. В следующей строке содержатся K целых чисел pi (0 ≤ pi ≤ 10^9), где pi — наименьший номер наклейки, не интересующий i-го коллекционера.

// Формат вывода
// Для каждого коллекционера в отдельной строке выведите количество различных чисел на наклейках, которые есть у Диего, но нет у этого коллекционера.

// 2 указателя
const fs = require('fs');
let fileContent = fs.readFileSync("input.txt", {encoding: 'utf-8'} );
let [n, stickers, k, partners] = fileContent.trim().split('\n');

stickers = Array.from(new Set(stickers.trim().split(' ').map(n => +n))).sort((a,b) => a - b);
partners = partners.trim().split(' ').map((n, i) => [+n, i]).sort((a,b) => a[0] - b[0]);

let ans = [];
let i = 0;
let j = 0;
let cur = 0;

while (j < partners.length) {
  while (partners[j][0] > stickers[i]) {
    cur += 1;
    i += 1;
  }
  ans.push([partners[j][1], cur]);
  j += 1;
}

ans.sort((a,b) => a[0] - b[0]);
ans = ans.map(([i, v]) => v);

fs.writeFileSync("output.txt", ans.join('\n'));